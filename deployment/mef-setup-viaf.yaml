# -*- coding: utf-8 -*-
apiVersion: v1
kind: Pod
metadata:
  name: mef-setup-viaf
  labels:
    app: mef
    tier: setup
spec:
  restartPolicy: Never
  volumes:
  - name: mef-app-data
    persistentVolumeClaim:
      claimName: mef-claim-data
  containers:
  - name: setup
    image: rero/rero-mef:test
    command: ["/bin/bash",  "-c", "time /invenio/src/scripts/setup --deploy-viaf /data/latest"]
    imagePullPolicy: Always
    resources:
      limits:
        memory: 2Gi
      requests:
        memory: 128Mi
    env:
    - name: INVENIO_ACCOUNTS_SESSION_REDIS_URL
      value: redis://mef-cache:$(MEF_CACHE_SERVICE_PORT_CACHE)/1
    - name: INVENIO_BROKER_URL
      value: amqp://$(RABBITMQ_DEFAULT_USER):$(RABBITMQ_DEFAULT_PASS)@mef-mq:$(MEF_MQ_SERVICE_PORT_WORKER)//
    - name: INVENIO_CACHE_REDIS_URL
      value: redis://mef-cache:$(MEF_CACHE_SERVICE_PORT_CACHE)/0
    - name: INVENIO_CELERY_BROKER_URL
      value: amqp://$(RABBITMQ_DEFAULT_USER):$(RABBITMQ_DEFAULT_PASS)@mef-mq:$(MEF_MQ_SERVICE_PORT_WORKER)//
    - name: INVENIO_CELERY_RESULT_BACKEND
      value: redis://mef-cache:$(MEF_CACHE_SERVICE_PORT_CACHE)/2
    - name: INVENIO_SEARCH_ELASTIC_HOSTS
      value: mef-indexer:$(MEF_INDEXER_SERVICE_PORT_API)
    - name: INVENIO_SQLALCHEMY_DATABASE_URI
      value: postgresql+psycopg2://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@mef-db:$(MEF_DB_SERVICE_PORT_DB)/$(POSTGRES_DB)
    - name: INVENIO_RATELIMIT_STORAGE_URL
      value: redis://mef-cache:$(MEF_CACHE_SERVICE_PORT_CACHE)/3
    envFrom:
     - configMapRef:
         name: mef
     - secretRef:
         name: mef
    volumeMounts:
    - mountPath: /data
      name: mef-app-data
