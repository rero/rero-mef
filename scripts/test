#!/usr/bin/env bash
# -*- coding: utf-8 -*-
#
# RERO MEF
# Copyright (C) 2024 RERO
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, version 3 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

# COLORS for messages
NC='\033[0m'                    # Default color
INFO_COLOR='\033[1;97;44m'      # Bold + white + blue background
SUCCESS_COLOR='\033[1;97;42m'   # Bold + white + green background
ERROR_COLOR='\033[1;97;41m'     # Bold + white + red background

PROGRAM=`basename $0`
SCRIPT_PATH=`dirname $0`

# MESSAGES
msg() {
  echo -e "${1}" 1>&2
}
# Display a colored message
# More info: https://misc.flogisoft.com/bash/tip_colors_and_formatting
# $1: choosen color
# $2: title
# $3: the message
colored_msg() {
  msg "${1}[${2}]: ${3}${NC}"
}

info_msg() {
  colored_msg "${INFO_COLOR}" "INFO" "${1}"
}

error_msg() {
  colored_msg "${ERROR_COLOR}" "ERROR" "${1}"
}

error_msg+exit() {
    error_msg "${1}" && exit 1
}

success_msg() {
  colored_msg "${SUCCESS_COLOR}" "SUCCESS" "${1}"
}

# Displays program name-> Vulnerability found in py version 1.11.0
msg "PROGRAM: ${PROGRAM}"

# Poetry is a mandatory condition to launch this program!
if [[ -z "${VIRTUAL_ENV}" ]]; then
  error_msg+exit "Error - Launch this script via poetry command:\n\tpoetry run run-tests"
fi

set -e
# -> Vulnerability found in flask-caching version 2.0.1
#    Vulnerability ID: 40459
# -> Vulnerability found in flask-cors version 4.0.1
#    Vulnerability ID: 70624
# -> Vulnerability found in sqlalchemy version 1.4.52
#    Vulnerability ID: 51668
# -> Vulnerability found in sqlalchemy-utils version 0.38.3
#    Vulnerability ID: 42194
# -> Vulnerability found in wtforms version 2.3.3
#    Vulnerability ID: 42852
# -> Vulnerability found in werkzeug version 2.2.3
#    Vulnerability ID: 71595
# -> Vulnerability found in werkzeug version 2.2.3
#    Vulnerability ID: 62019
#    ADVISORY: Black before 24.3.0 have a security vulnerability where
# -> Vulnerability found in werkzeug version 2.2.3
#    Vulnerability ID: 71594
# -> Vulnerability found in jinja2 version 3.1.4
#    Vulnerability ID: 70612
# -> Vulnerability found in py version 1.11.0
#    Vulnerability ID: 51457
info_msg "Check vulnerabilities:"
#    Vulnerability ID: 71595
safety_exceptions="-i 40459 -i 70624 -i 51668 -i 42194 -i 42852 -i 71595 -i 62019 -i 71594 -i 70612 -i 51457"
msg=$(safety check -o text ${safety_exceptions}) || {
  echo "Safety vulnerabilites found for packages:" $(safety check -o bare ${safety_exceptions})
  echo "Run: \"safety check -o screen ${safety_exceptions} | grep -i vulnerability\" for more details"
  exit 1
}
info_msg "Test black:"
black rero_mef tests --check
info_msg "Test pydocstyle:"
pydocstyle rero_mef tests docs
info_msg "Test isort:"
isort --check-only --diff "${SCRIPT_PATH}"
info_msg "Test useless imports:"
autoflake --recursive --remove-all-unused-imports --ignore-init-module-imports --check-diff --quiet .
info_msg "Sphinx-build:"
sphinx-build -qnNW docs docs/_build/html
info_msg "Tests:"
pytest

success_msg "Perfect ${PROGRAM}! See you soonâ€¦"
exit 0
