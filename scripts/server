#!/usr/bin/env bash
# -*- coding: utf-8 -*-
#
# This file is part of RERO MEF.
# Copyright (C) 2018 RERO.
#
# RERO MEF is free software; you can redistribute it
# and/or modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.
#
# RERO MEF is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with RERO MEF; if not, write to the
# Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston,
# MA 02111-1307, USA.
#
# In applying this license, RERO does not
# waive the privileges and immunities granted to it by virtue of its status
# as an Intergovernmental Organization or submit itself to any jurisdiction.

NC='\033[0m'                    # Default color
INFO_COLOR='\033[1;97;44m'      # Bold + white + blue background
SUCCESS_COLOR='\033[1;97;42m'   # Bold + white + green background
ERROR_COLOR='\033[1;97;41m'     # Bold + white + red background

PROGRAM=`basename $0`

set -e

# MESSAGES
msg() {
  echo -e "${1}" 1>&2
}
# Display a colored message
# More info: https://misc.flogisoft.com/bash/tip_colors_and_formatting
# $1: choosen color
# $2: title
# $3: the message
colored_msg() {
  msg "${1}[${2}]: ${3}${NC}"
}

info_msg() {
  colored_msg "${INFO_COLOR}" "INFO" "${1}"
}

error_msg() {
  colored_msg "${ERROR_COLOR}" "ERROR" "${1}"
}

error_msg+exit() {
    error_msg "${1}" && exit 1
}

success_msg() {
  colored_msg "${SUCCESS_COLOR}" "SUCCESS" "${1}"
}

# Displays program name
PROGRAM=`basename $0`
msg "PROGRAM: ${PROGRAM}"

PORT=5000
HTTP=false

if ! options=$(getopt -o np: -l non_secure,port: -- "$@")
then
  # something went wrong, getopt will put out an error message for us
  exit 1
fi

while [ $# -gt 0 ]
do
  case $1 in
    -n|--non_secure) HTTP=true;;
    -p|--port) PORT=$2; shift;;
    (--) shift; break;;
    (-*) error_msg+exit "$0: Unrecognized option $1";;
  esac
  shift
done

set -e

script_path=$(dirname "$0")
# poetry is a mandatory condition to launch this program!
if [[ -z "${VIRTUAL_ENV}" ]]; then
  error_msg+exit "Error - Launch this script via poetry command:\n\tpoetry run ${PROGRAM}"
fi

export FLASK_DEBUG=True
export FLASK_ENV=development
# Start Worker and Server
celery worker -A rero_mef.celery --beat -l INFO & pid_celery=$!

if ${HTTP}
then
  info_msg "Server is running on http://localhost:${PORT}"
  invenio run -p $PORT & pid_server=$!
else
  info_msg "Server is running on https://localhost:${PORT}"
  invenio run \
     --cert "$script_path"/../docker/nginx/test.crt \
     --key "$script_path"/../docker/nginx/test.key \
     -p $PORT & pid_server=$!
fi

trap 'kill $pid_celery $pid_server &>/dev/null' EXIT

wait $pid_celery $pid_server
